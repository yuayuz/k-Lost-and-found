//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: newFriend.proto

package grpc_code_gen.friend.newFriend;

@kotlin.jvm.JvmName("-initializenewFriendReply")
public inline fun newFriendReply(block: grpc_code_gen.friend.newFriend.newFriendReplyKt.Dsl.() -> kotlin.Unit): grpc_code_gen.friend.newFriend.NewFriend.newFriendReply =
  grpc_code_gen.friend.newFriend.newFriendReplyKt.Dsl._create(grpc_code_gen.friend.newFriend.NewFriend.newFriendReply.newBuilder()).apply { block() }._build()
public object newFriendReplyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: grpc_code_gen.friend.newFriend.NewFriend.newFriendReply.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: grpc_code_gen.friend.newFriend.NewFriend.newFriendReply.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): grpc_code_gen.friend.newFriend.NewFriend.newFriendReply = _builder.build()

    /**
     * <code>.newFriendMessageReply message = 1;</code>
     */
    public var message: grpc_code_gen.friend.friendMessage.NewFriendMessage.newFriendMessageReply
      @JvmName("getMessage")
      get() = _builder.getMessage()
      @JvmName("setMessage")
      set(value) {
        _builder.setMessage(value)
      }
    /**
     * <code>.newFriendMessageReply message = 1;</code>
     */
    public fun clearMessage() {
      _builder.clearMessage()
    }
    /**
     * <code>.newFriendMessageReply message = 1;</code>
     * @return Whether the message field is set.
     */
    public fun hasMessage(): kotlin.Boolean {
      return _builder.hasMessage()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun grpc_code_gen.friend.newFriend.NewFriend.newFriendReply.copy(block: grpc_code_gen.friend.newFriend.newFriendReplyKt.Dsl.() -> kotlin.Unit): grpc_code_gen.friend.newFriend.NewFriend.newFriendReply =
  grpc_code_gen.friend.newFriend.newFriendReplyKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val grpc_code_gen.friend.newFriend.NewFriend.newFriendReplyOrBuilder.messageOrNull: grpc_code_gen.friend.friendMessage.NewFriendMessage.newFriendMessageReply?
  get() = if (hasMessage()) getMessage() else null

