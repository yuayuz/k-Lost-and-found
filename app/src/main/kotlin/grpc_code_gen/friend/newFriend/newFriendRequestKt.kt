//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: newFriend.proto

package grpc_code_gen.friend.newFriend;

@kotlin.jvm.JvmName("-initializenewFriendRequest")
public inline fun newFriendRequest(block: grpc_code_gen.friend.newFriend.newFriendRequestKt.Dsl.() -> kotlin.Unit): grpc_code_gen.friend.newFriend.NewFriend.newFriendRequest =
  grpc_code_gen.friend.newFriend.newFriendRequestKt.Dsl._create(grpc_code_gen.friend.newFriend.NewFriend.newFriendRequest.newBuilder()).apply { block() }._build()
public object newFriendRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: grpc_code_gen.friend.newFriend.NewFriend.newFriendRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: grpc_code_gen.friend.newFriend.NewFriend.newFriendRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): grpc_code_gen.friend.newFriend.NewFriend.newFriendRequest = _builder.build()

    /**
     * <code>.newFriendMessageRequest id = 1;</code>
     */
    public var id: grpc_code_gen.friend.friendMessage.NewFriendMessage.newFriendMessageRequest
      @JvmName("getId")
      get() = _builder.getId()
      @JvmName("setId")
      set(value) {
        _builder.setId(value)
      }
    /**
     * <code>.newFriendMessageRequest id = 1;</code>
     */
    public fun clearId() {
      _builder.clearId()
    }
    /**
     * <code>.newFriendMessageRequest id = 1;</code>
     * @return Whether the id field is set.
     */
    public fun hasId(): kotlin.Boolean {
      return _builder.hasId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun grpc_code_gen.friend.newFriend.NewFriend.newFriendRequest.copy(block: grpc_code_gen.friend.newFriend.newFriendRequestKt.Dsl.() -> kotlin.Unit): grpc_code_gen.friend.newFriend.NewFriend.newFriendRequest =
  grpc_code_gen.friend.newFriend.newFriendRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val grpc_code_gen.friend.newFriend.NewFriend.newFriendRequestOrBuilder.idOrNull: grpc_code_gen.friend.friendMessage.NewFriendMessage.newFriendMessageRequest?
  get() = if (hasId()) getId() else null

